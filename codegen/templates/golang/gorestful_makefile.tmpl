{{- define "gorestful_makefile" -}}
# THIS FILE IS SAFE TO EDIT. It will not be overwritten when rerunning go-raml.

SERVICE_NAME = $(shell basename {{.RootImportPath}})
PACKAGES = $(shell go list ./... | grep -v '/vendor/' | grep -v '/delegate' | grep -v '/goraml' | grep -v '${SERVICE_NAME}/service' | grep -v '/types' | grep -v '/message' | grep -v '/beans' | grep -v '/dao' | grep -v '/typeconv')

PACKAGE = github.com/hotmall

OS = $(shell uname -s | tr A-Z a-z)
ARCH = $(shell uname -m | tr A-Z a-z)

BUILD_DATE = $(shell date +%FT%T%z)
ZIP_DATE = $(shell date +"%Y%m%d.%H%M%S")

COMMIT_HASH = $(shell git rev-parse --short HEAD 2>/dev/null)
SERVICE_VERSION = $(shell cat VERSION)
GO_VERSION = $(shell go version)
ZIP_NAME = $(SERVICE_NAME)-$(SERVICE_VERSION)

XFLAGS = -X $(PACKAGE)/commandline.ProcName=$(SERVICE_NAME) -X $(PACKAGE)/commandline.Version=$(SERVICE_VERSION) -X $(PACKAGE)/commandline.CommitHash=$(COMMIT_HASH) -X $(PACKAGE)/commandline.BuildDate=$(BUILD_DATE) -X "$(PACKAGE)/commandline.GoVersion=${GO_VERSION}"
LDFLAGS = $(XFLAGS) -s -w

SEDFLAG = --transform=s/runtime/$(ZIP_NAME)/g
ifeq ($(OS),darwin)
	SEDFLAG = -s /runtime/$(ZIP_NAME)/g
endif

all: test release

build: server

server:
	go generate
	go mod tidy
	go build -o ../runtime/bin -v -ldflags '$(LDFLAGS)'

debug:
	go generate
	go mod tidy
	go build -o ../runtime/bin -v -gcflags '-l' -ldflags '$(XFLAGS)'

clean:
	rm -rf delegate
	rm -rf goraml
	rm -rf service
	rm -rf types
	rm -rf message
	rm ../runtime/bin/$(SERVICE_NAME)

test:
	go test $(PACKAGES)

zip: debug
	cd .. && tar -zcvf dist/$(ZIP_NAME).$(ZIP_DATE).tgz $(SEDFLAG) --exclude .gitignore --exclude .DS_Store runtime

release: build
	cd .. && tar -zcvf dist/$(ZIP_NAME).$(OS).$(ARCH).tgz $(SEDFLAG) --exclude .gitignore --exclude .DS_Store runtime
{{end -}}
