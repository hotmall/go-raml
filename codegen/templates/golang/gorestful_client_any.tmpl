{{- define "gorestful_client_any_template" -}}
// DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.

package types

import (
	"errors"
)

type Error struct {
    error `json:"error"`
    Status int `json:"status"`
}

func NewError(status int, err error) *Error {
	return &Error{
		error:  err,
		Status: status,
	}
}

type Any []byte

func (a *Any) Reset() {
	*a = (*a)[:0]
}

// MarshalJSON returns m as the JSON encoding of m.
func (a Any) MarshalJSON() ([]byte, error) {
	if a == nil {
		return []byte("null"), nil
	}
	return a, nil
}

// UnmarshalJSON sets *m to a copy of data.
func (a *Any) UnmarshalJSON(data []byte) error {
	if a == nil {
		return errors.New("types.Any: UnmarshalJSON on nil pointer")
	}
	*a = append((*a)[0:0], data...)
	return nil
}

{{- end -}}
